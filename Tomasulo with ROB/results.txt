============== TEST INSTRUCTION SEQUENCE ===========
I#1	ld	r0,0(r1)
I#2	mul	r4,r0,r2
I#3	st	r4,0(r1)
I#4	addi	r1,r1,1
I#5	bne	r1,r2,-4
* CYCLE 0 (initial state)
==================================================================================================
RS_id	type	Busy	inst#	Op	Vj	Vk	Qj	Qj	A	Exec	Done
--------------------------------------------------------------------------------------------------
#1	LD	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#2	LD	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#3	ST	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#4	ST	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#5	ADD	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#6	ADD	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#7	ADD	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#8	MUL	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#9	MUL	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
==================================================================================================
=====================================================================
Registers
---------------------------------------------------------------------
 	r0	r1	r2	r3	r4	r5	r6	r7
---------------------------------------------------------------------
val	0	1	2	3	4	5	6	7
Qi	#0	#0	#0	#0	#0	#0	#0	#0
---------------------------------------------------------------------
 	r8	r9	r10	r11	r12	r13	r14	r15
---------------------------------------------------------------------
val	8	9	10	11	12	13	14	15
Qi	#0	#0	#0	#0	#0	#0	#0	#0
---------------------------------------------------------------------
=====================================================================

--- Cycle 1 ---
Before issuing: inst[0].num=1, inst[0].rt=0
STEP 1: LD or ST op detected.
Issued instruction #1 to RS entry 1 and ROB entry 0
* CYCLE 1
==================================================================================================
RS_id	type	Busy	inst#	Op	Vj	Vk	Qj	Qj	A	Exec	Done
--------------------------------------------------------------------------------------------------
#1	LD	Yes	I#1	ld	1	-1	#0	#0	0	No	No
#2	LD	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#3	ST	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#4	ST	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#5	ADD	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#6	ADD	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#7	ADD	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#8	MUL	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#9	MUL	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
==================================================================================================
=====================================================================
Registers
---------------------------------------------------------------------
 	r0	r1	r2	r3	r4	r5	r6	r7
---------------------------------------------------------------------
val	0	1	2	3	4	5	6	7
Qi	#0	#0	#0	#0	#0	#0	#0	#0
---------------------------------------------------------------------
 	r8	r9	r10	r11	r12	r13	r14	r15
---------------------------------------------------------------------
val	8	9	10	11	12	13	14	15
Qi	#0	#0	#0	#0	#0	#0	#0	#0
---------------------------------------------------------------------
=====================================================================
After issuing: inst[1].num=2, inst[1].rt=2

--- Cycle 2 ---
Current operation = 4
Functional Unit Available: true
Executing instruction #1
Value of memory[1] = 1
ROB updated successfully. ROB[0] result = 1.
Before issuing: inst[1].num=2, inst[1].rt=2
STEP 1: MUL or DIV op detected.
Vk (rt) = 2
Issue MUL: RS#8 Vk=2 (RT=2), Qk=0
Issued instruction #2 to RS entry 8 and ROB entry 1
* CYCLE 2
==================================================================================================
RS_id	type	Busy	inst#	Op	Vj	Vk	Qj	Qj	A	Exec	Done
--------------------------------------------------------------------------------------------------
#1	LD	Yes	I#1	ld	1	-1	#0	#0	0	Yes	Yes
#2	LD	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#3	ST	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#4	ST	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#5	ADD	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#6	ADD	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#7	ADD	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#8	MUL	Yes	I#2	mul	0	2	#0	#0	-1	No	No
#9	MUL	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
==================================================================================================
=====================================================================
Registers
---------------------------------------------------------------------
 	r0	r1	r2	r3	r4	r5	r6	r7
---------------------------------------------------------------------
val	0	1	2	3	4	5	6	7
Qi	#0	#0	#0	#0	#1	#0	#0	#0
---------------------------------------------------------------------
 	r8	r9	r10	r11	r12	r13	r14	r15
---------------------------------------------------------------------
val	8	9	10	11	12	13	14	15
Qi	#0	#0	#0	#0	#0	#0	#0	#0
---------------------------------------------------------------------
=====================================================================
After issuing: inst[2].num=3, inst[2].rt=0

--- Cycle 3 ---
ROB committed!
Committed instruction from ROB head.
Forwarding Vj: Updating RS#1 Vj from 1 to 1
Forwarding Vj: Updating RS#8 Vj from 1 to 1
Cleared RS entry 1
Current operation = 2
Functional Unit Available: true
Executing instruction #2
Before issuing: inst[2].num=3, inst[2].rt=0
STEP 1: LD or ST op detected.
Issued instruction #3 to RS entry 1 and ROB entry 2
* CYCLE 3
==================================================================================================
RS_id	type	Busy	inst#	Op	Vj	Vk	Qj	Qj	A	Exec	Done
--------------------------------------------------------------------------------------------------
#1	LD	Yes	I#3	st	1	-1	#0	#0	0	Yes	No
#2	LD	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#3	ST	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#4	ST	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#5	ADD	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#6	ADD	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#7	ADD	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#8	MUL	Yes	I#2	mul	1	2	#0	#0	-1	Yes	No
#9	MUL	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
==================================================================================================
=====================================================================
Registers
---------------------------------------------------------------------
 	r0	r1	r2	r3	r4	r5	r6	r7
---------------------------------------------------------------------
val	1	1	2	3	4	5	6	7
Qi	#0	#0	#0	#0	#2	#0	#0	#0
---------------------------------------------------------------------
 	r8	r9	r10	r11	r12	r13	r14	r15
---------------------------------------------------------------------
val	8	9	10	11	12	13	14	15
Qi	#0	#0	#0	#0	#0	#0	#0	#0
---------------------------------------------------------------------
=====================================================================
After issuing: inst[3].num=4, inst[3].rt=1

--- Cycle 4 ---
Current operation = 5
Functional Unit Available: true
Executing instruction #3
ROB updated successfully. ROB[2] result = 1.
Current operation = 2
Functional Unit Available: true
Executing instruction #2
Result should equal 1 * 2. It actually equals 2.
Value of memory[0] = 2
ROB updated successfully. ROB[1] result = 2.
Multiplication complete.
Before issuing: inst[3].num=4, inst[3].rt=1
STEP 1: ADDI op detected.
Step 1: ADDI constant = 1
Vk (rt) = 1
Issued instruction #4 to RS entry 5 and ROB entry 3
* CYCLE 4
==================================================================================================
RS_id	type	Busy	inst#	Op	Vj	Vk	Qj	Qj	A	Exec	Done
--------------------------------------------------------------------------------------------------
#1	LD	Yes	I#3	st	1	-1	#0	#0	1	Yes	Yes
#2	LD	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#3	ST	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#4	ST	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#5	ADD	Yes	I#4	NONE	1	1	#0	#0	1	No	No
#6	ADD	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#7	ADD	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#8	MUL	Yes	I#2	mul	1	2	#0	#0	-1	Yes	Yes
#9	MUL	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
==================================================================================================
=====================================================================
Registers
---------------------------------------------------------------------
 	r0	r1	r2	r3	r4	r5	r6	r7
---------------------------------------------------------------------
val	1	1	2	3	4	5	6	7
Qi	#0	#3	#0	#0	#2	#0	#0	#0
---------------------------------------------------------------------
 	r8	r9	r10	r11	r12	r13	r14	r15
---------------------------------------------------------------------
val	8	9	10	11	12	13	14	15
Qi	#0	#0	#0	#0	#0	#0	#0	#0
---------------------------------------------------------------------
=====================================================================
After issuing: inst[4].num=5, inst[4].rt=2

--- Cycle 5 ---
ROB committed!
Committed instruction from ROB head.
Cleared RS entry 1
Cleared RS entry 8
Current operation = 6
BNE: Potential Branching from instruction #4
Functional Unit Available: true
Executing instruction #4
Result should equal 1 + 1. It actually equals 2.
ROB updated successfully. ROB[3] result = 2.
ROB #3 updated with result 2 - ADDI
Before issuing: inst[4].num=5, inst[4].rt=2
STEP 1: BNE op detected.
Step 1: BNE immediate = -4
Vk (rt) = 2
Issued instruction #5 to RS entry 6 and ROB entry 4
* CYCLE 5
==================================================================================================
RS_id	type	Busy	inst#	Op	Vj	Vk	Qj	Qj	A	Exec	Done
--------------------------------------------------------------------------------------------------
#1	LD	No	I#3	st	1	-1	#0	#0	1	Yes	No
#2	LD	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#3	ST	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#4	ST	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#5	ADD	Yes	I#4	NONE	1	1	#0	#0	1	Yes	Yes
#6	ADD	Yes	I#5	NONE	-1	2	#3	#0	-4	No	No
#7	ADD	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#8	MUL	No	I#2	mul	1	2	#0	#0	-1	Yes	No
#9	MUL	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
==================================================================================================
=====================================================================
Registers
---------------------------------------------------------------------
 	r0	r1	r2	r3	r4	r5	r6	r7
---------------------------------------------------------------------
val	1	1	2	3	2	5	6	7
Qi	#0	#4	#0	#0	#2	#0	#0	#0
---------------------------------------------------------------------
 	r8	r9	r10	r11	r12	r13	r14	r15
---------------------------------------------------------------------
val	8	9	10	11	12	13	14	15
Qi	#0	#0	#0	#0	#0	#0	#0	#0
---------------------------------------------------------------------
=====================================================================
After issuing: inst[1].num=2, inst[1].rt=2

--- Cycle 6 ---
ROB committed!
Committed instruction from ROB head.
Forwarding Vj: Updating RS#6 Vj from 2 to 2
Cleared RS entry 5
Current operation = 7
BNE: Potential Branching from instruction #5
Functional Unit Available: true
Executing instruction #5
BNE Execution Cycles Remaining: 1
BNE Immediate Value: -4
BNE misprediction detected. Correcting branch prediction.
Current inst num = 5
ROB flushed successfully.
ROB updated successfully. ROB[4] result = -1.
Before issuing: inst[5].num=0, inst[5].rt=0
* CYCLE 6
==================================================================================================
RS_id	type	Busy	inst#	Op	Vj	Vk	Qj	Qj	A	Exec	Done
--------------------------------------------------------------------------------------------------
#1	LD	No	I#3	st	1	-1	#0	#0	1	Yes	No
#2	LD	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#3	ST	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#4	ST	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#5	ADD	No	I#4	NONE	1	1	#0	#0	1	Yes	No
#6	ADD	Yes	I#5	NONE	2	2	#0	#0	-4	Yes	Yes
#7	ADD	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#8	MUL	No	I#2	mul	1	2	#0	#0	-1	Yes	No
#9	MUL	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
==================================================================================================
=====================================================================
Registers
---------------------------------------------------------------------
 	r0	r1	r2	r3	r4	r5	r6	r7
---------------------------------------------------------------------
val	1	1	2	3	1	5	6	7
Qi	#0	#4	#0	#0	#2	#0	#0	#0
---------------------------------------------------------------------
 	r8	r9	r10	r11	r12	r13	r14	r15
---------------------------------------------------------------------
val	8	9	10	11	12	13	14	15
Qi	#0	#0	#0	#0	#0	#0	#0	#0
---------------------------------------------------------------------
=====================================================================
After issuing: inst[5].num=0, inst[5].rt=0

--- Cycle 7 ---
ROB committed!
Committed instruction from ROB head.
Cleared RS entry 6
Before issuing: inst[5].num=0, inst[5].rt=0
* CYCLE 7
==================================================================================================
RS_id	type	Busy	inst#	Op	Vj	Vk	Qj	Qj	A	Exec	Done
--------------------------------------------------------------------------------------------------
#1	LD	No	I#3	st	1	-1	#0	#0	1	Yes	No
#2	LD	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#3	ST	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#4	ST	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#5	ADD	No	I#4	NONE	1	1	#0	#0	1	Yes	No
#6	ADD	No	I#5	NONE	2	2	#0	#0	-4	Yes	No
#7	ADD	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
#8	MUL	No	I#2	mul	1	2	#0	#0	-1	Yes	No
#9	MUL	No	I#-1	NONE	-1	-1	#0	#0	-1	No	No
==================================================================================================
=====================================================================
Registers
---------------------------------------------------------------------
 	r0	r1	r2	r3	r4	r5	r6	r7
---------------------------------------------------------------------
val	1	2	2	3	1	5	6	7
Qi	#0	#4	#0	#0	#2	#0	#0	#0
---------------------------------------------------------------------
 	r8	r9	r10	r11	r12	r13	r14	r15
---------------------------------------------------------------------
val	8	9	10	11	12	13	14	15
Qi	#0	#0	#0	#0	#0	#0	#0	#0
---------------------------------------------------------------------
=====================================================================
After issuing: inst[5].num=0, inst[5].rt=0
